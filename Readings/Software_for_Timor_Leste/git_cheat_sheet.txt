# Git Command Cheat Sheet

## Basic Commands
- `git init`: Initialize a new local Git repository in the current directory.
  ```bash
  # Create a new directory and initialize a Git repository
  mkdir my-project
  cd my-project
  git init
  ```
- `git clone <url>`: Clone a repository from a remote source, such as GitHub or GitLab.
  ```bash
  # Clone a repository from a remote URL
  git clone https://github.com/username/repository.git
  ```
- `git add <file>`: Stage a file for commit, preparing it to be included in the next commit.
  ```bash
  # Stage a single file
  git add README.md
  
  # Stage multiple files
  git add file1.txt file2.txt
  
  # Stage all modified and new files
  git add .
  ```
- `git commit -m "message"`: Commit staged files with a descriptive message.
  ```bash
  # Commit staged files with a message
  git commit -m "Add README file"
  ```
- `git status`: Check the current status of your repository, showing modified, staged, and untracked files.
  ```bash
  # Check repository status
  git status
  ```
- `git log`: View the commit history of the repository, displaying commit hashes, authors, dates, and messages.
  ```bash
  # View commit history
  git log
  
  # View commit history with condensed output
  git log --oneline
  ```

## Branching
- `git branch`: List all local branches in the repository.
  ```bash
  # List local branches
  git branch
  ```
- `git branch <branch-name>`: Create a new branch with the specified name.
  ```bash
  # Create a new branch
  git branch feature-x
  ```
- `git checkout <branch-name>`: Switch to the specified branch.
  ```bash
  # Switch to a branch
  git checkout feature-x
  ```
- `git merge <branch-name>`: Merge the specified branch into the current branch.
  ```bash
  # Merge a branch into the current branch
  git merge feature-x
  ```

## Remote Repositories
- `git remote add <name> <url>`: Add a remote repository with the specified name and URL.
  ```bash
  # Add a remote repository
  git remote add origin https://github.com/username/repository.git
  ```
- `git push <remote> <branch>`: Push the specified branch to the remote repository.
  ```bash
  # Push the current branch to the remote repository
  git push origin main
  ```
- `git pull <remote> <branch>`: Pull updates from the specified branch of the remote repository.
  ```bash
  # Pull updates from the remote repository
  git pull origin main
  ```
- `git fetch <remote>`: Fetch updates from the remote repository without merging them into the current branch.
  ```bash
  # Fetch updates from the remote repository
  git fetch origin
  ```

## Undoing Changes
- `git revert <commit>`: Revert a specific commit by creating a new commit that undoes the changes.
  ```bash
  # Revert a commit
  git revert abc123
  ```
- `git reset <file>`: Unstage a file, removing it from the staging area.
  ```bash
  # Unstage a file
  git reset README.md
  ```
- `git checkout -- <file>`: Discard changes in a file, reverting it to the last committed state.
  ```bash
  # Discard changes in a file
  git checkout -- README.md
  ```

Remember, this cheat sheet covers the most commonly used Git commands. Git provides many more commands and options for advanced use cases, such as rebasing, stashing, and submodules. Refer to the official Git documentation for a comprehensive guide to Git's features and capabilities.

When working with Git, it's essential to follow best practices, such as writing meaningful commit messages, creating focused and descriptive branches, and regularly pushing your changes to remote repositories. Effective use of Git enables collaboration, version control, and the ability to revert changes when needed.

---

# Git nia surat-tahan 
 # # Komandu báziku 
 - inísiu: Inisia repozitóriu foun ida husi Git iha diresaun atual. 
 "Basa 
 # Kriasaun diresaun foun ida no inisia repozitoriu Git 
 MKdir my-project 
 CD ha'u-nia projetu 
 Git hahú 
 " 
 -git clone <url>: Clone repozitóriu ida husi fonte remote, hanesan GitHub ka GitLab. 
 "Basa 
 # Clone repozitóriu ida husi URL remote 
 Git clone https://github.com/username/repository.git 
 " 
 -git add <file>: Halo fail ba kompromisu, prepara ba kompromisu tuir mai. 
 "Basa 
 # Halo fail ida de'it 
 Git add README.md 
 # Faze arkivu oioin 
 Git add file1.txt file2.txt 
 # Faze hotu-hotu modifikadu no fail foun 
 Git aumenta. 
 " 
 -git kompromete -m "mensajen": Kompromete arkivu ho mensajen deskrisaun. 
 "Basa 
 # Kompromete fail sira ne'ebé iha mensajen 
 Git kompromete -m "Atu hatudu fail README" 
 " 
 - estatutu git: Haree ba ita-nia repozitóriu nia estatutu atuál, hatudu arkivu modifikadu, estajiadu, no la hetan track. 
 "Basa 
 # Haree repozitoriu nia estatutu 
 Estatutu Git 
 " 
 - "Liafuan ": Haree istória kona-ba ema ne'ebé hakerek istória kona-ba ema ne'ebé hakerek istória kona-ba ema ne'e, hatudu ema ne'ebé hakerek karta, ema ne'ebé hakerek karta, no mensajen. 
 "Basa 
 # Haree to'ok istória 
 Git log 
 # Haree istória ne'ebé kondensadu 
 Git log --oneline 
 " 
 ## Fila fali 
 - Sukursal git: Lista sukursal hotu iha repozitóriu. 
 "Basa 
 # Lista sukursal lokál 
 Git branch 
 " 
 -git branch <branch-name>: Kriasaun sukursal foun ho naran espesífiku. 
 "Basa 
 # Halo sukursal foun 
 Git branch-x 
 " 
 -git checkout <branch-name>: Switch ba sukursal espesífiku. 
 "Basa 
 # Halo mudansa ba sukursal 
 Git checkout feature-x 
 " 
 -git merge <branch-name>: Merge sukursal espesífiku ba sukursal atual. 
 "Basa 
 # Hatama sukursal ida ba sukursal ohin loron 
 Git merge feature-x 
 " 
 ## Repozitoriu Remote 
 -git remote add <name> <url>: Aumenta repozitóriu remote ho naran no URL espesífiku. 
 "Basa 
 # Aumenta repozitóriu remote 
 Git remote add origin https://github.com/username/repository.git 
 " 
 -git push <remote> <branch>: Push sukursal espesífiku ba repozitóriu remote. 
 "Basa 
 # Foti sukursal atuál ba iha fatin dook 
 Git dudu orijinál prinsipál 
 " 
 -git pull <remote> <branch>: Pull atualiza husi sukursal espesífiku husi repozitóriu remote. 
 "Basa 
 # Foti informasaun husi repozitoriu remote 
 Git pull origin main 
 " 
 -git fitch <remote>: Hetan atualizaun husi repozitóriu remote sein halibur ba sukursal atual. 
 "Basa 
 # Hetan informasaun husi repozitoriu remote 
 Git kaer orijen 
 " 
 # # Hadook an husi mudansa 
 - Git reverse <commit>: Reversa kompromisu espesífiku ida hodi kria kompromisu foun ida-ne'ebé la halo mudansa sira. 
 "Basa 
 # Halo fali komitmentu 
 Git troka abc123 
 " 
 - re-set <file>: Halo fila-fali fail ida, hasai tiha husi fatin estajiariu. 
 "Basa 
 # Halo fail 
 Git reset README.md 
 " 
 -git check-out -- <file>: Hadook tiha mudansa iha arkivu ida, hodi troka ba estadu ikus ne'ebé komete ona.