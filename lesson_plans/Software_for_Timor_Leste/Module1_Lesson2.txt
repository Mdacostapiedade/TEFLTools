# Lesson Plan: Introduction to Test-Driven Development (TDD)

## Duration: 1 week (5 sessions, 2 hours each)
## Setup 
Students will need access to a git repo with an html file called index.html at the root. 
It should say Hello World! or something like that.
There needs to be test_index.py in the same folder.
pytest.ini and .git/hooks/pre-commit need to be in place as well.
Setup instructions are in git_repo_tdd_metrics_guide.txt but here are notes;
```
# Configure pytest to run tests on check-in
echo "[pytest]
testpaths = .
python_files = test_*.py
python_classes = 
python_functions = test_*
addopts = -v
" > pytest.ini

# Configure Git hooks to run tests and gather metrics on check-in
mkdir -p .git/hooks
cat > .git/hooks/pre-commit <<EOL
#!/bin/sh
pytest


chmod +x .git/hooks/pre-commit
```

### Session 1: Introduction to Software Testing and TDD
# Software is Backwards

1. Software is backwards. The industry does everything the opposite way normal humans would do things.<br>
So, I have some good news and some bad news.<br>
The bad news is, since things are opposite, and now that we know a little HTML it's time for the test.<br>
The good news is, we get to write the test first and so we all get to see the answers.<br>
Also, its important to work together and so its ok to talk about the answers and how to do things with each other.
For this class, cheating is called collaboration.
<br>
Let's take a look at the test. 
```
# open the index file
with open('index.html', 'r') as file:
    # read what is in the file
    content = file.read()
    # claim Hello Timor Leste! is in what was read
    assert 'Hello Timor Leste!' in content
```
That test is a python program.
It is going to open the HTML file like we made last week and read it. 
It's going to look inside for the words, "Hello Timor Leste!".

To pass the test, you have to have a file called index.html 
Also, it has to say, Hello Timor Leste!

Now, you are prepared to take the test.

#### Objectives:
- Understand the importance of software testing
- Learn the concept and principles of TDD
- Intro to Metrics/Data Analysis

#### Materials:

- git_repo_tdd_metrics_guide.txt !!!
- Computers with Python and pytest installed
- Handout on TDD principles

#### Objectives:
- Learn to understand basic unit tests using pytest
- Understand how to check in to git against a test

#### Activities:
1. (20 min) Review of previous session and homework
2. (30 min) Writing a simple test function with pytest
3. (40 min) Hands-on practice: Students write HTML to pass the test
4. (25 min) Running tests and interpreting results
5. (5 min) Q&A and wrap-up