{
  "title": "Lists and Dictionaries in Python",
  "questions": [
    {
      "question": "What is the correct syntax to create an empty list in Python?",
      "choices": [
        "list()",
        "[]",
        "{}",
        "()"
      ],
      "answer": "[]"
    },
    {
      "question": "Which method is used to add an element to the end of a list?",
      "choices": [
        "add()",
        "insert()",
        "append()",
        "extend()"
      ],
      "answer": "append()"
    },
    {
      "question": "What is the index of the first element in a Python list?",
      "choices": [
        "0",
        "1",
        "-1",
        "None of the above"
      ],
      "answer": "0"
    },
    {
      "question": "Which of the following is a key characteristic of Python dictionaries?",
      "choices": [
        "Ordered collection of elements",
        "Accessed by numerical index",
        "Key-value pairs",
        "Cannot be modified after creation"
      ],
      "answer": "Key-value pairs"
    },
    {
      "question": "What is the correct syntax to create an empty dictionary in Python?",
      "choices": [
        "dict()",
        "[]",
        "{}",
        "()"
      ],
      "answer": "{}"
    },
    {
      "question": "Which method is used to remove and return an item at a specific index from a list?",
      "choices": [
        "remove()",
        "delete()",
        "pop()",
        "discard()"
      ],
      "answer": "pop()"
    },
    {
      "question": "What happens if you try to access a key that doesn't exist in a dictionary?",
      "choices": [
        "It returns None",
        "It raises a KeyError",
        "It creates a new key-value pair",
        "It returns an empty string"
      ],
      "answer": "It raises a KeyError"
    },
    {
      "question": "Which method is used to sort a list in ascending order?",
      "choices": [
        "sort()",
        "order()",
        "arrange()",
        "ascending()"
      ],
      "answer": "sort()"
    },
    {
      "question": "What is the purpose of the get() method in dictionaries?",
      "choices": [
        "To add a new key-value pair",
        "To remove a key-value pair",
        "To retrieve a value safely without raising an error if the key doesn't exist",
        "To update an existing key-value pair"
      ],
      "answer": "To retrieve a value safely without raising an error if the key doesn't exist"
    },
    {
      "question": "Which of the following is true about list slicing in Python?",
      "choices": [
        "It always includes the end index",
        "It can only be used with positive indices",
        "It can be used with a step value",
        "It can only slice contiguous elements"
      ],
      "answer": "It can be used with a step value"
    },
    {
      "question": "What is the time complexity of accessing an element in a dictionary by its key?",
      "choices": [
        "O(1)",
        "O(n)",
        "O(log n)",
        "O(n^2)"
      ],
      "answer": "O(1)"
    },
    {
      "question": "Which method is used to return a view of all keys in a dictionary?",
      "choices": [
        "keys()",
        "getkeys()",
        "allkeys()",
        "dict_keys()"
      ],
      "answer": "keys()"
    },
    {
      "question": "What is the result of the expression [1, 2, 3] + [4, 5, 6] in Python?",
      "choices": [
        "[1, 2, 3, 4, 5, 6]",
        "[5, 7, 9]",
        "Error",
        "[[1, 2, 3], [4, 5, 6]]"
      ],
      "answer": "[1, 2, 3, 4, 5, 6]"
    },
    {
      "question": "Which of the following is NOT a valid way to create a dictionary in Python?",
      "choices": [
        "dict(a=1, b=2, c=3)",
        "{\"a\": 1, \"b\": 2, \"c\": 3}",
        "dict([(\"a\", 1), (\"b\", 2), (\"c\", 3)])",
        "dict{\"a\": 1, \"b\": 2, \"c\": 3}"
      ],
      "answer": "dict{\"a\": 1, \"b\": 2, \"c\": 3}"
    },
    {
      "question": "What is the purpose of the enumerate() function when used with lists?",
      "choices": [
        "To count the number of elements in a list",
        "To remove duplicate elements from a list",
        "To return both the index and value of each element in a list",
        "To sort the list in ascending order"
      ],
      "answer": "To return both the index and value of each element in a list"
    },
    {
      "question": "Which method is used to remove all items from a dictionary?",
      "choices": [
        "remove_all()",
        "clear()",
        "delete()",
        "empty()"
      ],
      "answer": "clear()"
    },
    {
      "question": "What is the result of the expression list(range(5)) in Python?",
      "choices": [
        "[0, 1, 2, 3, 4]",
        "[1, 2, 3, 4, 5]",
        "[0, 1, 2, 3, 4, 5]",
        "[1, 2, 3, 4]"
      ],
      "answer": "[0, 1, 2, 3, 4]"
    },
    {
      "question": "Which of the following is true about dictionary keys in Python?",
      "choices": [
        "They must be mutable",
        "They can be of any data type",
        "They must be unique",
        "They can be modified after creation"
      ],
      "answer": "They must be unique"
    },
    {
      "question": "What is the purpose of the zip() function in Python?",
      "choices": [
        "To compress files",
        "To create a list of tuples from multiple iterables",
        "To encrypt data",
        "To sort multiple lists simultaneously"
      ],
      "answer": "To create a list of tuples from multiple iterables"
    },
    {
      "question": "Which method is used to return a view of all key-value pairs in a dictionary?",
      "choices": [
        "pairs()",
        "items()",
        "elements()",
        "all()"
      ],
      "answer": "items()"
    },
    {
      "question": "What is the result of the expression [1, 2, 3] * 3 in Python?",
      "choices": [
        "[1, 2, 3, 1, 2, 3, 1, 2, 3]",
        "[3, 6, 9]",
        "Error",
        "[1, 2, 3, 3, 3]"
      ],
      "answer": "[1, 2, 3, 1, 2, 3, 1, 2, 3]"
    },
    {
      "question": "Which of the following is NOT a valid way to access elements in a list?",
      "choices": [
        "my_list[0]",
        "my_list[-1]",
        "my_list[1:3]",
        "my_list{0}"
      ],
      "answer": "my_list{0}"
    },
    {
      "question": "What is the purpose of the setdefault() method in dictionaries?",
      "choices": [
        "To set a default value for all keys",
        "To return a value for a key, inserting it if the key doesn't exist",
        "To remove a key-value pair if it exists",
        "To reset the dictionary to its default state"
      ],
      "answer": "To return a value for a key, inserting it if the key doesn't exist"
    },
    {
      "question": "Which of the following is true about list comprehensions in Python?",
      "choices": [
        "They can only be used to create lists",
        "They are slower than traditional for loops",
        "They can include conditional statements",
        "They can only work with one iterable at a time"
      ],
      "answer": "They can include conditional statements"
    },
    {
      "question": "What is the purpose of the fromkeys() method in dictionaries?",
      "choices": [
        "To create a new dictionary with specified keys and values",
        "To remove specified keys from a dictionary",
        "To sort a dictionary by its keys",
        "To merge two dictionaries based on their keys"
      ],
      "answer": "To create a new dictionary with specified keys and values"
    },
    {
      "question": "Which of the following is true about nested lists in Python?",
      "choices": [
        "They cannot contain elements of different data types",
        "They are always square (same number of elements in each sublist)",
        "They can be used to represent matrices",
        "They cannot be modified after creation"
      ],
      "answer": "They can be used to represent matrices"
    },
    {
      "question": "What is the purpose of the update() method in dictionaries?",
      "choices": [
        "To update the values of existing keys",
        "To add new key-value pairs or update existing ones",
        "To remove outdated key-value pairs",
        "To refresh the dictionary's internal structure"
      ],
      "answer": "To add new key-value pairs or update existing ones"
    },
    {
      "question": "Which of the following is true about the in operator when used with lists and dictionaries?",
      "choices": [
        "It checks for the presence of a value in a list and a key in a dictionary",
        "It checks for the presence of an index in a list and a value in a dictionary",
        "It checks for the presence of a value in both lists and dictionaries",
        "It checks for the presence of an index in both lists and dictionaries"
      ],
      "answer": "It checks for the presence of a value in a list and a key in a dictionary"
    },
    {
      "question": "What is the purpose of the copy() method in lists and dictionaries?",
      "choices": [
        "To create a deep copy of the object",
        "To create a shallow copy of the object",
        "To copy only the keys of a dictionary",
        "To copy only the non-zero elements of a list"
      ],
      "answer": "To create a shallow copy of the object"
    },
    {
      "question": "Which of the following is true about dictionary comprehensions in Python?",
      "choices": [
        "They can only create dictionaries with string keys",
        "They are less efficient than traditional loops for creating dictionaries",
        "They can include conditional statements",
        "They can only work with one iterable at a time"
      ],
      "answer": "They can include conditional statements"
    }
  ]
}